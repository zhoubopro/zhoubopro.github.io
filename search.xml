<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一些常被忽略的CSS技巧</title>
      <link href="/2019/09/27/css/css-skill/"/>
      <url>/2019/09/27/css/css-skill/</url>
      
        <content type="html"><![CDATA[<h4 id="1-使用CSS复位"><a href="#1-使用CSS复位" class="headerlink" title="1.使用CSS复位"></a>1.使用CSS复位</h4><p>CSS复位可以在不同的浏览器上保持一致的样式风格。您可以使用CSS reset 库<a href="http://necolas.github.io/normalize.css/" target="_blank" rel="noopener">Normalize</a>等，也可以使用一个更简化的复位方法：</p><pre class=" language-css"><code class="language-css"><span class="token selector">*,*<span class="token pseudo-element">::before</span>,*<span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="2-CSS禁用鼠标事件"><a href="#2-CSS禁用鼠标事件" class="headerlink" title="2.CSS禁用鼠标事件"></a>2.CSS禁用鼠标事件</h4><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.disabled</span> </span><span class="token punctuation">{</span>  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="3-制造模糊文本"><a href="#3-制造模糊文本" class="headerlink" title="3.制造模糊文本"></a>3.制造模糊文本</h4><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.blurry-text</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>  <span class="token property">text-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="4-跨浏览器的透明"><a href="#4-跨浏览器的透明" class="headerlink" title="4.跨浏览器的透明"></a>4.跨浏览器的透明</h4><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.transparent</span> </span><span class="token punctuation">{</span>  <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">alpha</span><span class="token punctuation">(</span>opacity=<span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* internet explorer */</span>  <span class="token property">-khtml-opacity</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* khtml, old safari */</span>  <span class="token property">-moz-opacity</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/* mozilla, netscape */</span>  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">/* fx, safari, opera */</span><span class="token punctuation">}</span>          </code></pre><h4 id="5-CSS3：全屏背景"><a href="#5-CSS3：全屏背景" class="headerlink" title="5.CSS3：全屏背景"></a>5.CSS3：全屏背景</h4><pre class=" language-css"><code class="language-css"><span class="token selector">body </span><span class="token punctuation">{</span>   <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url('images/bg.jpg')</span> no-repeat center center fixed<span class="token punctuation">;</span>   <span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">-moz-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">-o-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="6-强制出现垂直滚动条"><a href="#6-强制出现垂直滚动条" class="headerlink" title="6.强制出现垂直滚动条"></a>6.强制出现垂直滚动条</h4><pre class=" language-css"><code class="language-css"><span class="token selector">html </span><span class="token punctuation">{</span>   <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">101%</span> <span class="token punctuation">}</span></code></pre><h4 id="7-强制换行"><a href="#7-强制换行" class="headerlink" title="7.强制换行"></a>7.强制换行</h4><pre class=" language-css"><code class="language-css"><span class="token selector">pre </span><span class="token punctuation">{</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> pre-wrap<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* css-3 */</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> -moz-pre-wrap<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* Mozilla, since 1999 */</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> -pre-wrap<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/* Opera 4-6 */</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> -o-pre-wrap<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* Opera 7 */</span>  <span class="token property">word-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* Internet Explorer 5.5+ */</span><span class="token punctuation">}</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS面试题</title>
      <link href="/2019/09/19/interview/interview-js/"/>
      <url>/2019/09/19/interview/interview-js/</url>
      
        <content type="html"><![CDATA[<h4 id="请简述-JavaScript-中的-this"><a href="#请简述-JavaScript-中的-this" class="headerlink" title="请简述 JavaScript 中的 this"></a>请简述 JavaScript 中的 this</h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaScript </tag>
            
            <tag> Interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS垂直水平居中</title>
      <link href="/2019/09/18/css/horizontal-vertical/"/>
      <url>/2019/09/18/css/horizontal-vertical/</url>
      
        <content type="html"><![CDATA[<h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><blockquote><p>垂直水平居中，在 CSS 中是一个老生常谈的问题，有常见的 <code>flex、transform、absolute</code> 等等。<br>也有 CSS3 的网格布局。还有伪元素的方法，是的，你没有看错，<code>::after</code> 和 <code>::before</code> 也可以实现居中。</p></blockquote><h4 id="No-1-flex方法-传送门"><a href="#No-1-flex方法-传送门" class="headerlink" title="No.1 flex方法 传送门"></a>No.1 flex方法 <a href="https://codepen.io/zhoubopro/pen/pozxQYo" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>现在通用的方法也就是这个啦，因为它的写法够简单直观，兼容性也没什么问题，也是移动端居中方式的首选。<br>利用到了 2 个关键属性：<code>justify-content</code> 和 <code>align-items</code>，都设置为 <code>center</code>，即可实现居中。<br>需要注意的是，一定要把这里的 <code>flex-center</code> 挂在父级元素，才能使得其中 唯一的 子元素居中。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper flex-center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>flex horizontal and vertical<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.flex-center</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-2-flex-margin-传送门"><a href="#No-2-flex-margin-传送门" class="headerlink" title="No.2 flex + margin 传送门"></a>No.2 flex + margin <a href="https://codepen.io/zhoubopro/pen/QWLZJYX" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>父级元素设置 <code>flex</code>，子元素设置 <code>margin: auto</code>。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>flex + margin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span> p </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-3-transform-absolute-传送门"><a href="#No-3-transform-absolute-传送门" class="headerlink" title="No.3 transform + absolute 传送门"></a>No.3 transform + absolute <a href="https://codepen.io/zhoubopro/pen/XWrxoJN" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>这个方法，用于图片的居中显示。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://img2.imgtn.bdimg.com/it/u<span class="token punctuation">=</span>1405109477,1383249963&amp;fm<span class="token punctuation">=</span>11&amp;gp<span class="token punctuation">=</span>0.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span> img </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*position: relative; 替换掉绝对定位，效果是一样的 */</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-4-table-cell-传送门"><a href="#No-4-table-cell-传送门" class="headerlink" title="No.4 table-cell 传送门"></a>No.4 table-cell <a href="https://codepen.io/zhoubopro/pen/WNeaLwe" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>利用 <code>table</code> 的单元格居中效果展示，与 <code>flex</code> 一样，需要写在父级元素上。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>table-cell<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-5-absolute-四个方向的值相等-传送门"><a href="#No-5-absolute-四个方向的值相等-传送门" class="headerlink" title="No.5 absolute + 四个方向的值相等 传送门"></a>No.5 absolute + 四个方向的值相等 <a href="https://codepen.io/zhoubopro/pen/bGbmOrG" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>使用绝对定位布局，设置 <code>margin:auto</code>，并设置 <code>top、left、right、bottom</code> 的值相等即可（不一定要都是 0）。<br>这种方法一般用于弹出层，需要设置弹出层的宽高。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>absolute + 四个方向的值相等<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span> p </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">170</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-6-grid-传送门"><a href="#No-6-grid-传送门" class="headerlink" title="No.6 grid 传送门"></a>No.6 grid <a href="https://codepen.io/zhoubopro/pen/jONeXLW" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>代码量也很少，但兼容性不如flex，不推荐使用。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>grid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span> p </span><span class="token punctuation">{</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">justify-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-7-after-传送门"><a href="#No-7-after-传送门" class="headerlink" title="No.7 ::after 传送门"></a>No.7 ::after <a href="https://codepen.io/zhoubopro/pen/zYOmypE" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>::after也可以</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://img2.imgtn.bdimg.com/it/u<span class="token punctuation">=</span>1405109477,1383249963&amp;fm<span class="token punctuation">=</span>11&amp;gp<span class="token punctuation">=</span>0.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span> &gt; img </span><span class="token punctuation">{</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="No-8-before-传送门"><a href="#No-8-before-传送门" class="headerlink" title="No.8 ::before 传送门"></a>No.8 ::before <a href="https://codepen.io/zhoubopro/pen/qBWJLxK" target="_blank" rel="noopener">传送门</a></h4><blockquote><p>另一种是配合 <code>font-size: 0</code> 共同施展的魔法。</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://img2.imgtn.bdimg.com/it/u<span class="token punctuation">=</span>1405109477,1383249963&amp;fm<span class="token punctuation">=</span>11&amp;gp<span class="token punctuation">=</span>0.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.wrapper</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span><span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.wrapper</span> &gt; img </span><span class="token punctuation">{</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><code>*ps：</code> <code>font-size: 0</code> 的神秘之处在于，可以消除标签之间的间隙。<br>另外，因为伪元素搭配的，都是最基础的 CSS 写法，所以不存在兼容性的风险。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS性能优化之代码优化</title>
      <link href="/2019/09/18/javascript/optimization/"/>
      <url>/2019/09/18/javascript/optimization/</url>
      
        <content type="html"><![CDATA[<h4 id="利用函数的惰性载入提高-javaScript-代码性能"><a href="#利用函数的惰性载入提高-javaScript-代码性能" class="headerlink" title="利用函数的惰性载入提高 javaScript 代码性能"></a>利用函数的惰性载入提高 javaScript 代码性能</h4><p>在 javaScript 代码中，因为各浏览器之间的行为的差异，我们经常会在函数中包含了大量的 <code>if</code> 语句，以检查浏览器特性，解决不同浏览器的兼容问题。 例如，我们最常见的为 <code>dom</code> 节点添加事件的函数：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> addEvent <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>        element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fun<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span><span class="token punctuation">{</span>        element<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'on'</span> <span class="token operator">+</span> type<span class="token punctuation">,</span> fun<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        element<span class="token punctuation">[</span><span class="token string">'on'</span> <span class="token operator">+</span> type<span class="token punctuation">]</span> <span class="token operator">=</span> fun<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>每次调用 <code>addEvent</code> 函数的时候，它都要对浏览器所支持的能力进行检查，首先检查是否支持 <code>addEventListener</code> 方法，如果不支持，再检查是否支持 <code>attachEvent</code> 方法，如果还不支持，就用 dom 0 级的方法添加事件。 这个过程，在 <code>addEvent</code> 函数每次调用的时候都要走一遍，其实，如果浏览器支持其中的一种方法，那么他就会一直支持了，就没有必要再进行其他分支的检测了， 也就是说，<code>if</code> 语句不必每次都执行，代码可以运行的更快一些。</p><p>解决的方案就是称之为惰性载入的技巧。</p><p>所谓惰性载入，就是说函数的if分支只会执行一次，之后调用函数时，直接进入所支持的分支代码。 有两种实现惰性载入的方式，第一种事函数在第一次调用时，对函数本身进行二次处理，该函数会被覆盖为符合分支条件的函数，这样对原函数的调用就不用再经过执行的分支了， 我们可以用下面的方式使用惰性载入重写 <code>addEvent()</code>。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> addEvent <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>        addEvent <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fun<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span><span class="token punctuation">{</span>        addEvent <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            element<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'on'</span> <span class="token operator">+</span> type<span class="token punctuation">,</span> fun<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        addEvent <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            element<span class="token punctuation">[</span><span class="token string">'on'</span> <span class="token operator">+</span> type<span class="token punctuation">]</span> <span class="token operator">=</span> fun<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">addEvent</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在这个惰性载入的 <code>addEvent()</code> 中，<code>if</code> 语句的每个分支都会为 <code>addEvent</code> 变量赋值，有效覆盖了原函数。 最后一步便是调用了新赋函数。下一次调用 <code>addEvent()</code> 的时候，便会直接调用新赋值的函数，这样就不用再执行 <code>if</code> 语句了。</p><p>第二种实现惰性载入的方式是在声明函数时就指定适当的函数。 这样在第一次调用函数时就不会损失性能了，只在代码加载时会损失一点性能。 一下就是按照这一思路重写的 <code>addEvent()</code>。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> addEvent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fun<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            element<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'on'</span> <span class="token operator">+</span> type<span class="token punctuation">,</span> fun<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> element<span class="token punctuation">,</span> fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            element<span class="token punctuation">[</span><span class="token string">'on'</span> <span class="token operator">+</span> type<span class="token punctuation">]</span> <span class="token operator">=</span> fun<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这个例子中使用的技巧是创建一个匿名的自执行函数，通过不同的分支以确定应该使用那个函数实现，实际的逻辑都一样， 不一样的地方就是使用了函数表达式（使用了 <code>var</code> 定义函数）和新增了一个匿名函数，另外每个分支都返回一个正确的函数，并立即将其赋值给变量 <code>addEvent</code>。</p><p>惰性载入函数的优点只执行一次 <code>if</code> 分支，避免了函数每次执行时候都要执行 <code>if</code> 分支和不必要的代码，因此提升了代码性能，至于那种方式更合适，就要看您的需求而定了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaScript </tag>
            
            <tag> code优化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
